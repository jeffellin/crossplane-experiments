apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xmydatastore.ellin.net
spec:
  writeConnectionSecretsToNamespace: other-namespace
  compositeTypeRef:
    apiVersion: ellin.net/v1alpha1
    kind: XMyDataStore
  resources:
    - name: rds-store
      base:
        apiVersion: rds.aws.upbound.io/v1beta1
        kind: Instance
        spec:
          providerConfigRef:
            name: aws-provider-266463974589
          forProvider:
            allocatedStorage: 20
            autoGeneratePassword: true
            autoMinorVersionUpgrade: true
            backupRetentionPeriod: 14
            backupWindow: 09:46-10:16
            engine: postgres
            engineVersion: "13.7"
            instanceClass: db.t3.micro
            maintenanceWindow: Mon:00:00-Mon:03:00
            name: example
            passwordSecretRef:
              key: password
              name: example-dbinstance
              namespace: default
            publiclyAccessible: true
            region: us-west-1
            skipFinalSnapshot: true
            storageEncrypted: true
            storageType: gp2
            username: adminuser
          writeConnectionSecretToRef:
            namespace: default
            name: TBD
      connectionDetails:
       - fromConnectionSecretKey: username
       - fromConnectionSecretKey: password
       - fromConnectionSecretKey: port
       - fromConnectionSecretKey: host
       - name: type
         value: postgresql
       - name: database
         value: petclinic
      patches:
        # get the values for the chart from the claim
        - fromFieldPath: "spec.enablePersistence"
          toFieldPath: "spec.forProvider.values.primary.persistence.enabled"
        - fromFieldPath: "spec.databasename"
          toFieldPath: "spec.forProvider.values.auth.database"
       # set the name of the secret for the connection details
        - fromFieldPath: "metadata.uid"
          toFieldPath: "spec.writeConnectionSecretToRef.name"
          transforms:
            - type: string
              string:
                fmt: "%s-secret1"
        # copy the secret to the Compisition
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.writeConnectionSecretToRef.name"
          toFieldPath: "metadata.labels['binding']"
        # copy the secret to the status.binding.name field
        # this is needed for the the service binding spec
        - type: ToCompositeFieldPath
          fromFieldPath: "metadata.labels['binding']"
          toFieldPath: "status.binding.name"
        ## use the name of the chart to get the name
        ## of the resources created by the chart.
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: metadata.labels['chartfullname']
          transforms:
            - type: string
              string:
                fmt: "%s-postgresql"
        - fromFieldPath: metadata.labels['chartfullname']
          toFieldPath: spec.connectionDetails[0].name
        - fromFieldPath: metadata.labels['chartfullname']
          toFieldPath: spec.connectionDetails[1].name
        - fromFieldPath: metadata.labels['chartfullname']
          toFieldPath: spec.connectionDetails[2].name
          ## override some values from the claim if set
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
